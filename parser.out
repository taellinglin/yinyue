Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> file
Rule 1     file -> file item
Rule 2     file -> item
Rule 3     item -> NOTE
Rule 4     item -> INSTRUMENT
Rule 5     item -> PARAMETER

Terminals, with rules where they appear

INSTRUMENT           : 4
NOTE                 : 3
PARAMETER            : 5
error                : 

Nonterminals, with rules where they appear

file                 : 1 0
item                 : 1 2

Parsing method: LALR

state 0

    (0) S' -> . file
    (1) file -> . file item
    (2) file -> . item
    (3) item -> . NOTE
    (4) item -> . INSTRUMENT
    (5) item -> . PARAMETER

    NOTE            shift and go to state 3
    INSTRUMENT      shift and go to state 4
    PARAMETER       shift and go to state 5

    file                           shift and go to state 1
    item                           shift and go to state 2

state 1

    (0) S' -> file .
    (1) file -> file . item
    (3) item -> . NOTE
    (4) item -> . INSTRUMENT
    (5) item -> . PARAMETER

    NOTE            shift and go to state 3
    INSTRUMENT      shift and go to state 4
    PARAMETER       shift and go to state 5

    item                           shift and go to state 6

state 2

    (2) file -> item .

    NOTE            reduce using rule 2 (file -> item .)
    INSTRUMENT      reduce using rule 2 (file -> item .)
    PARAMETER       reduce using rule 2 (file -> item .)
    $end            reduce using rule 2 (file -> item .)


state 3

    (3) item -> NOTE .

    NOTE            reduce using rule 3 (item -> NOTE .)
    INSTRUMENT      reduce using rule 3 (item -> NOTE .)
    PARAMETER       reduce using rule 3 (item -> NOTE .)
    $end            reduce using rule 3 (item -> NOTE .)


state 4

    (4) item -> INSTRUMENT .

    NOTE            reduce using rule 4 (item -> INSTRUMENT .)
    INSTRUMENT      reduce using rule 4 (item -> INSTRUMENT .)
    PARAMETER       reduce using rule 4 (item -> INSTRUMENT .)
    $end            reduce using rule 4 (item -> INSTRUMENT .)


state 5

    (5) item -> PARAMETER .

    NOTE            reduce using rule 5 (item -> PARAMETER .)
    INSTRUMENT      reduce using rule 5 (item -> PARAMETER .)
    PARAMETER       reduce using rule 5 (item -> PARAMETER .)
    $end            reduce using rule 5 (item -> PARAMETER .)


state 6

    (1) file -> file item .

    NOTE            reduce using rule 1 (file -> file item .)
    INSTRUMENT      reduce using rule 1 (file -> file item .)
    PARAMETER       reduce using rule 1 (file -> file item .)
    $end            reduce using rule 1 (file -> file item .)

